{"version":3,"sources":["webpack://Slide/webpack/universalModuleDefinition","webpack://Slide/webpack/bootstrap","webpack://Slide/./source/tile-grid-util.coffee"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Rect","Tile","TileGrid","_clamp","boundMethodCheck","instance","Constructor","Error","min","max","Math","[object Object]","x1","x2","y1","y2","this","set","rect","matrix","cb","argA","argB","argC","j","k","ref","ref1","ref2","ref3","x","y","length","opt","width","height","item","clearCoord","bind","isItemNull","isCoordEmpty","setCoordItem","clearItem","check_holes","_temp","offset_x","offset_y","removed","full","count_x","count_y","decrY","decrX","new_item","incrY","incrX","yi","xi","loopMatrix","spot","ix","iy","sx","sy","falsel","len","results","row","pos","count","clearLinkedX","splice","results1","clearLinkedY","Array","fill","diff","len1","len2","len3","q","ref10","ref11","ref4","ref5","ref6","ref7","ref8","ref9","t","u","v","super","push","clearX","pop","unshift","shift","clearY","normalize","bounds","result","break_rect","findEmptyRect","copy","clearRect","str","console","log","map","String","key","join"],"mappings":"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","file":"tile-grid-util.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Slide\"] = factory();\n\telse\n\t\troot[\"Slide\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","#a javascript utility library to manage tile grids with arbitrary data.\n\n\nDEFAULT_OPT = \n\tx2: 3\n\ty2: 3\n\n_clamp = (n,min,max)->\n\treturn Math.min(Math.max(n, min), max)\n\n\n# base rect class ith \"bounds\".\nclass Rect\n\tconstructor: (x1,x2,y1,y2)->\n\t\t@set(x1,x2,y1,y2)\n\t\n\tset: (x1,x2,y1,y2)->\n\t\t@x1 = x1 || 0\n\t\t@x2 = x2 || 0\n\t\t@y1 = y1 || 0\n\t\t@y2 = y2 || 0\n\t\treturn @\n\n\tcopy: (rect)->\n\t\t@x1 = rect.x1\n\t\t@x2 = rect.x2\n\t\t@y1 = rect.y1\n\t\t@y2 = rect.y2\t\t\n\t\treturn @\n\n\tnormalize: ->\n\t\tif @x1 < 0\n\t\t\t@x2 -= @x1\n\t\t\t@x1 = 0\n\t\tif @y1 < 0\n\t\t\t@y2 -= @y1\n\t\t\t@y1 = 0\n\t\treturn @\n\n\tloopMatrix: (matrix,cb,argA,argB,argC)->\n\t\tfor y in [@y1...@y2]\n\t\t\tif y < 0 then continue\n\t\t\tif y > matrix.length then return false\n\t\t\tfor x in [@x1...@x2]\n\t\t\t\tif matrix[y][x] == undefined then continue\n\t\t\t\tif cb(matrix[y][x],x,y,argA,argB,argC) == false\n\t\t\t\t\treturn false\n\t\treturn true\n\n\tloopRect: (cb,argA,argB,argC)->\n\t\tfor y in [@y1...@y2]\n\t\t\tfor x in [@x1...@x2]\n\t\t\t\tif cb(x,y,argA,argB,argC)\n\t\t\t\t\treturn false\n\t\treturn true\n\n\n# tile class, added as items in grid\nclass Tile extends Rect\n\tconstructor: (opt)->\n\t\topt.x2 = opt.width\n\t\topt.y2 = opt.height\n\t\tsuper(0,opt.width,0,opt.height)\n\t\t@item = opt.item\n\t\t@rect = opt.rect || null\n\t\t# if @x2 == 0 + @y2  0 || @x1 < 0 || @y1 < 0\n\t\t# \tthrow new Error 'bad tile.'\n\n\tsetXY: (x,y)->\n\t\t@rect.set(x,x+@x2,y,y+@y2)\n\n\n# main grid class\nclass TileGrid extends Rect\n\tconstructor: (opt)->\n\n\t\tsuper()\n\t\t\n\t\t@check_holes = if opt.check_holes? then opt.check_holes else true\n\t\t@_temp = [new Rect,new Rect,new Rect]\n\t\t@offset_x = 0\n\t\t@offset_y = 0\n\t\t\n\t\t\n\t\t@matrix = [] #2d matrix array that contains references to items in the list.\n\t\t# @item_list = [] # a list of items.\n\t\t@removed = []\n\n\n\t\t@full = new Rect(opt.width-1,0,opt.height-1,0) # keep track of what portion of the matrix is full.\n\t\t@full.count_x = []\n\t\t@full.count_y = []\n\n\t\t@set(0,opt.width,0,opt.height)\n\n\t\n\t\t\n\n\t\t\n\n\t# clear one coordinate from matrix\n\tclearCoord: (item,x,y)=>\n\t\tif @matrix[y][x]\n\t\t\t@decrY(y)\n\t\t\t@decrX(x)\n\t\t@matrix[y][x] = null\n\t\treturn true\n\n\n\tisItemNull: (item)=>\n\t\titem == null\n\n\tisCoordEmpty: (x,y)=>\n\t\t@matrix[y][x] == null\n\n\t# set the coordinate item\n\tsetCoordItem: (item,x,y,new_item)=>\n\t\tif item then throw new Error 'setCoord, coord taken ['+x+','+y+'] by '+item\n\t\t@matrix[y][x] = [new_item,x-new_item.rect.x1,y-new_item.rect.y1] \n\t\t@incrY(y)\n\t\t@incrX(x)\n\n\t# (perf) decrease full row y value\n\tdecrY: (y)->\n\t\t@full.count_y[y]--\n\t\tif @full.y1 > y\n\t\t\t@full.y1 = y\n\n\t\tif @full.y2 > y\n\t\t\t@full.y2 = y\n\n\t# (perf) decrease\n\tdecrX: (x)->\n\t\t@full.count_x[x]--\n\t\tif @full.x1 > x\n\t\t\t@full.x1 = x\n\n\t\tif @full.x2 > x\n\t\t\t@full.x2 = x\n\n\n\t# increment row full value and count (all x items on y)\n\tincrY: (y)->\n\t\t@full.count_y[y]++\n\n\t\t# decide the full X/Y coord\n\t\tif @full.count_y[y] == @width\n\t\t\tif y < @full.y1\n\t\t\t\t# check for holes\n\t\t\t\tif @check_holes\n\t\t\t\t\tfor yi in [y...@full.y1]\n\t\t\t\t\t\tif @full.count_y[yi] != @width\n\t\t\t\t\t\t\treturn\n\t\t\t\t@full.y1 = y\n\t\t\t\t\n\t\t\telse\n\t\t\t\t# check for holes\n\t\t\t\tif @check_holes\n\t\t\t\t\tfor yi in [@full.y1...y]\n\t\t\t\t\t\tif @full.count_y[yi] != @width\n\t\t\t\t\t\t\treturn\n\t\t\t\t@full.y2 = y\n\t\t\t\n\t\t\t\t\t\n\t\n\t# increment column full value and count (all y items on x)\n\tincrX: (x)->\n\t\t@full.count_x[x]++\n\n\t\t# decide the full X/Y coord\n\t\tif @full.count_x[x] == @height\n\t\t\tif x < @full.x1\n\t\t\t\t# check for holes\n\t\t\t\tif @check_holes\n\t\t\t\t\tfor xi in [x...@full.x1]\n\t\t\t\t\t\tif @full.count_x[xi] != @height\n\t\t\t\t\t\t\treturn\n\t\t\t\t@full.x1 = x\n\t\t\telse\n\t\t\t\t# check for holes\n\t\t\t\tif @check_holes\n\t\t\t\t\tfor xi in [@full.x1...x]\n\t\t\t\t\t\tif @full.count_y[xi] != @height\n\t\t\t\t\t\t\treturn\n\t\t\t\t@full.x2 = x\n\t\t\t\t\t\n\n\n\n\n\n\t# clear all items in a rect from the matrix\n\tclearRect: (rect)->\n\t\trect.loopMatrix(@matrix,@clearItem)\n\n\n\t# clear one item from the matrix\n\tclearItem: (spot,x,y)=>\n\t\tif !spot then return falsel\n\t\titem = spot[0]\n\t\tsx = x - spot[1]\n\t\tsy = y - spot[2]\n\t\tif !item.rect\n\t\t\tthrow new Error 'cant clear item, item has no rect. '+sx+','+sy\n\n\t\tfor iy in [sy...sy+item.y2]\n\t\t\tfor ix in [sx...sx+item.x2]\n\t\t\t\t@clearCoord(item,ix,iy)\n\n\t\titem.rect = null\n\t\t# @removed.push item\n\t\t\n\n\t# clear a row from matrix\n\tclearY: (y)->\n\t\tfor item,x in @matrix[y]\n\t\t\t@clearItem @matrix[y][x],x,y\n\n\n\t# clear any items in a column that are also in column x2\n\tclearLinkedX: (x,x2)->\n\t\tfor row,y in @matrix\n\t\t\tif row[x] && row[x2] && row[x2][0] == row[x][0]\n\t\t\t\t@clearItem row[x],x,y\n\n\n\t# clear any items in a column that are also in column x2\n\tclearLinkedY: (y,y2)->\n\t\tfor spot,x in @matrix[y]\n\t\t\tif spot && @matrix[y2] && @matrix[y2][x][0] == spot[0]\n\t\t\t\t@clearItem spot,x,y\n\t\t\t\t\n\n\t# clear a column from matrix\n\tclearX: (x)->\n\t\tfor row,y in @matrix\n\t\t\t@clearItem row[x],x,y\n\n\n\t# insert column(s) into matrix\n\tinsertX: (pos,count)->\n\t\t@clearLinkedX(pos,_clamp(pos-1,0,@x2-1))\n\t\t\n\t\tif @full.x1 > pos\n\t\t\t@full.x1 += count\n\t\telse\n\t\t\t@full.x1 = @x2-1\n\t\tif @full.x2 > pos\n\t\t\t@full.x2 = 0\n\n\t\t@full.y1 = @y2\n\t\t@full.y2 = 0\n\n\t\tfor i in [0...count]\n\t\t\t@full.count_x.splice(pos,0,0)\n\t\t\tfor y in @matrix\n\t\t\t\ty.splice(pos,0,null)\n\n\n\t# insert row(s) into matrix\n\tinsertY: (pos,count)->\n\t\t@clearLinkedY(pos,_clamp(pos-1,0,@y2-1))\n\t\tif @full.y1 < pos\n\t\t\t@full.y1 = pos+count\n\t\tfor i in [0...count]\n\t\t\t@full.count_y.splice(pos,0,0)\n\t\t\t@matrix.splice(pos,0,new Array(@x2).fill(null))\n\n\n\t# set new bounds for matrix.\n\tset: (x1,x2,y1,y2)->\n\t\tif !@height\n\t\t\t@height = 0\n\t\tif !@width\n\t\t\t@width = 0\n\t\tif @x1 == undefined\n\t\t\treturn super(x1,x2,y1,y2)\n\n\t\tdiff = new Rect x1 - @x1,x2 - @x2,y1 - @y1,y2 - @y2\n\n\t\tif (diff.y1 - diff.y2) > @height\n\t\t\tthrow new Error 'set: Y out of bounds'\n\n\t\tif (diff.x1 - diff.x2) > @width\n\t\t\tthrow new Error 'set: X out of bounds'\n\t\t\n\t\t# log 'diff',diff\n\n\t\t\n\n\t\t\n\t\t#diff X2\n\t\tif diff.x2 > 0\n\t\t\tfor i in [0...diff.x2]\n\t\t\t\t@full.count_x.push 0\n\t\t\t\tfor y in @matrix\n\t\t\t\t\ty.push null\n\t\telse if diff.x2 < 0\n\t\t\tfor i in [0...diff.x2]\n\t\t\t\t@clearX(@x2-1+i)\n\t\t\t\t@full.count_x.pop()\n\t\t\t\tfor y in @matrix\n\t\t\t\t\ty.pop()\n\t\t@x2 = x2\n\n\t\t#diff X1\n\t\tif diff.x1 < 0\n\t\t\tfor i in [0...diff.x1]\n\t\t\t\t@full.count_x.unshift 0\n\t\t\t\t@full.x2++\n\t\t\t\t@full.x1++\n\t\t\t\t@offset_x--\n\t\t\t\tfor row in @matrix\n\t\t\t\t\trow.unshift null\n\t\t\t\t\t\t\n\n\t\telse if diff.x1 > 0\n\t\t\tfor i in [0...diff.x1]\n\t\t\t\t@clearX(0)\n\t\t\t\t@full.x2--\n\t\t\t\t@full.x1--\n\t\t\t\t@offset_x++\n\t\t\t\t@full.count_x.shift()\n\t\t\t\tfor row in @matrix\n\t\t\t\t\trow.shift()\n\t\t@x1 = x1\n\n\n\n\n\t\t#diff Y2\n\t\tif diff.y2 > 0\n\t\t\tfor i in [0...diff.y2]\n\t\t\t\t@full.count_y.push 0\n\t\t\t\t@matrix.push new Array(@x2-@x1).fill(null)\n\t\telse if diff.y2 < 0\n\t\t\tfor i in [0...diff.y2]\n\t\t\t\t@clearY(@y2-1+i)\n\t\t\t\t@full.count_y.pop()\n\t\t\t\t@matrix.pop()\n\t\t\t# for i in [0...diff.y2]\n\t\t@y2 = y2\n\n\n\t\t#diff Y1\n\t\tif diff.y1 > 0\n\t\t\tfor i in [0...diff.y1]\n\t\t\t\t@clearY(0)\n\t\t\t\t@full.y2--\n\t\t\t\t@full.y1--\n\t\t\t\t@offset_y++\n\t\t\t\t@full.count_y.shift()\n\t\t\t\t@matrix.shift()\n\t\telse if diff.y1 < 0\n\t\t\tfor i in [0...diff.y1]\n\t\t\t\t@offset_y--\n\t\t\t\t@full.y2++\n\t\t\t\t@full.y1++\n\t\t\t\t@full.count_y.unshift 0\n\t\t\t\t@full.x1 = 0\n\t\t\t\t@full.x2 = 0\n\t\t\t\t@matrix.unshift new Array(@x2-@x1).fill(null)\n\t\t@y1 = y1\n\n\t\t@normalize()\n\n\n\t\tif diff.x2 - diff.x1 > 0\n\t\t\t@full.y1 = @y2-1\n\t\t\t@full.y2 = @y1\n\t\t\n\t\tif diff.y2 - diff.y1 > 0\n\t\t\t@full.x1 = @x2-1\n\t\t\t@full.x2 = @x1\n\n\t\t@width = @x2\n\t\t@height = @y2\n\n\n\n\tpad: (x1,x2,y1,y2)->\n\t\t@set(@x1-x1,@x2+x2,@y1-y1,@y2+y2)\n\n\n\n\n\n\t# find a free rect within bounds, if no rect is found, return null\n\t# rect x1 and y1 must be normalized.\n\tfindEmptyRect: (rect,bounds,result)->\n\t\trect.normalize()\n\t\tfor y in [bounds.y1...bounds.y2]\n\t\t\tfor x in [bounds.x1...bounds.x2]\n\t\t\t\tbreak_rect = false\n\t\t\t\tfor iy in [y+rect.y2-1..y]\n\t\t\t\t\tif break_rect\n\t\t\t\t\t\tbreak\n\t\t\t\t\tfor ix in [x+rect.x2-1..x]\n\t\t\t\t\t\tif !@matrix[iy]\n\t\t\t\t\t\t\tbreak_rect = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tif @matrix[iy][ix] != null\n\t\t\t\t\t\t\tbreak_rect = true\n\t\t\t\t\t\t\tbreak\n\t\t\t\tif break_rect == false\n\t\t\t\t\treturn result.set(x,x+rect.x2,y,y+rect.y2)\n\n\t\t\t\t\n\n\n\t# add an item with a specific bound to look for free space, if the grid is full within the search bounds, callback function will be fired and its return value will decide to either search again with the same callback or to do a final search without the callback.\n\taddTile: (item,x1,x2,y1,y2)->\n\t\tbounds = @_temp[0].set(x1,x2,y1,y2)\n\t\t\n\t\t# limit search  by the rect that we are trying to find (no overflow searches)\n\t\tif bounds.x2 > bounds.x1\n\t\t\tbounds.x2 -= item.x2 - 1\n\t\telse\n\t\t\tbounds.x1 -= item.x2 - 1\n\t\t\n\t\t\n\t\tif bounds.y2 > bounds.y1\n\t\t\tbounds.y2 -= item.y2 - 1\n\t\telse\n\t\t\tbounds.y1 -= item.y2 - 1\n\n\t\tif bounds.y2 < 0 || bounds.x2 < 0 || bounds.y1 > @y2 || bounds.x1 > @x2\n\t\t\treturn false\n\n\n\n\n\n\t\tresult = @_temp[1].set()\n\n\t\tif !@findEmptyRect(item,bounds,result)\n\t\t\treturn false\n\t\telse\n\t\t\titem.rect = new Rect().copy(result)\n\t\t\titem.rect.loopMatrix(@matrix,@setCoordItem,item)\n\t\t\t# @item_list.push item\n\t\t\treturn true\n\n\tsetTileCb: (bounds)->\n\t\t@clearRect(bounds)\n\t\treturn false\n\t\n\t# setTile: (item,x1,y1)->\n\t# \t@addTile(item,x1,x1+item.x2,y1,y1+item.y2)\n\n\n\tlog: ->\n\t\tconsole.log '-----------------\\n\\n'\n\t\tfor y in @matrix\n\t\t\tstr = y.map (x)->\n\t\t\t\treturn x && String(x[0].item.key) || '- '\n\t\t\tconsole.log(str.join('     ')+'\\n\\n')\n\t\tconsole.log '-----------------'\n\n\n\n\n\nmodule.exports = {Rect,Tile,TileGrid}"],"sourceRoot":""}